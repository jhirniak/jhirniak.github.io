<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jaroslaw Hirniak&#39;s Pirate Parrot</title>
    <link>http://jhirniak.github.io/</link>
    <description>Recent content on Jaroslaw Hirniak&#39;s Pirate Parrot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Nov 2015 15:08:06 +0000</lastBuildDate>
    <atom:link href="http://jhirniak.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>about</title>
      <link>http://jhirniak.github.io/about/</link>
      <pubDate>Sun, 08 Nov 2015 15:08:06 +0000</pubDate>
      
      <guid>http://jhirniak.github.io/about/</guid>
      <description>&lt;p&gt;I am software developer with deep interest in distributed and parallel systems, machine learning, and big data. I created this blog to share interesting ideas and resources as well as to publish the projects and ideas that I work on.&lt;/p&gt;

&lt;p&gt;If you would like to learn more about me then visit my &lt;a href=&#34;https://uk.linkedin.com/in/jaroslawhirniak&#34;&gt;LinkedIn profile&lt;/a&gt; or &lt;a href=&#34;http://hirniak.com/&#34;&gt;homepage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The best way to contact me is via email &lt;a id=&#34;mm&#34; href=&#34;mailto:nospam@thanks.com&#34;&gt;click to reveal (JS required)&lt;/a&gt;.&lt;/p&gt;

&lt;script type=&#39;text/javascript&#39;&gt;
$(function () {
  $(&#34;a#mm&#34;).click(function (e) {
    console.log(&#39;Fired&#39;);
    var secret = function () { return atob(&#39;akBoaXJuaWFrLmluZm8=&#39;) };
    $(this).attr(&#34;href&#34;, &#39;mailto:&#39; + secret());
    $(this).text(secret());
    $(this).off(&#34;click&#34;);
    e.preventDefault();
  });
});
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Neural Nets</title>
      <link>http://jhirniak.github.io/neural_nets/</link>
      <pubDate>Sun, 08 Nov 2015 02:46:58 +0000</pubDate>
      
      <guid>http://jhirniak.github.io/neural_nets/</guid>
      <description>

&lt;h2 id=&#34;purpose-of-this-page:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Purpose of this page&lt;/h2&gt;

&lt;p&gt;Here I list everything interesting that I encountered on my journey of learning neural nets, for my reference, and for anyone who could find such a list useful in their own learning ;).&lt;/p&gt;

&lt;h2 id=&#34;courses:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Courses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CS231n: Convolutional Neural Networks for Visual Recognition at Stanford

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cs231n.stanford.edu/&#34;&gt;Course website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cs231n.github.io/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cs231n.github.io/convolutional-networks/&#34;&gt;ConvNets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Machine Learning at Oxford:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cs.ox.ac.uk/people/nando.defreitas/machinelearning/&#34;&gt;Course website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/ProfNandoDF/videos&#34;&gt;Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;resources-for-learning-about-neural-networks:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Resources for learning about Neural Networks&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://karpathy.github.io/neuralnets/&#34;&gt;Andrej Karpathy: Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://karpathy.github.io/neuralnets/&#34;&gt;Andrej Karpathy: Hacker&amp;rsquo;s guide to Neural Networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/AyzOUbkUf3M&#34;&gt;Geoffrey Hinton (the father of NN) Google Tech Talk about The Next Generation of Neural Networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/0BxKBnD5y2M8NbWN6XzM5UXkwNDA/view&#34;&gt;Yann LeCun: Obstacles on the path to AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rodrigob.github.io/are_we_there_yet/build/classification_datasets_results.html&#34;&gt;What is the class of this image? Article comparing the current state of the cart algorithms in object classification.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;articles-and-motivation-for-studying-neural-networks:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Articles and motivation for studying Neural Networks&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.newscientist.com/article/dn28456-im-going-to-make-facebooks-ai-predict-what-happen-in-videos/&#34;&gt;Interview with Yann Lecun: I&amp;rsquo;m going to make Facebook&amp;rsquo;s AI predict what happens in videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://googleresearch.blogspot.co.uk/2015/11/computer-respond-to-this-email.html&#34;&gt;Computer, respond to this email. (Google prototype NN for replying to your email (demo in Google Inbox)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/1656448931234602/videos/1668490396697122/&#34;&gt;Journey and achievement of AI in Facebook. Deep from the history till the date!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/zuck/videos/10102456212502251/&#34;&gt;Helping people to see with DNs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Engineering/videos/10153621574817200/&#34;&gt;Visual Question and Answering Demo - MemNet (natural language understanding system) combined with image recognition technology in a system called Visual Q&amp;amp;A (VQA) that answers to questions about photos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.technologyreview.com/emtech/15/&#34;&gt;EmTech 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.technologyreview.com/emtech/15/&#34;&gt;Facebook&amp;rsquo;s AI can caption photos for the blind on its own&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://uk.businessinsider.com/myths-misconceptions-about-artificial-intelligence-2015-9?r=US&amp;amp;IR=T&#34;&gt;19 A.I. experts reveal the biggest myths about robots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://phys.org/news/2015-10-human-intuition-algorithms-outperforms-teams.html&#34;&gt;System that replaces human intuition with algorithms outperforms human teams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://techcrunch.com/2015/10/13/facebooks-working-on-a-tool-to-help-the-blind-see-images/#.wqgozt:NWyq&#34;&gt;Facebook’s Working On A Tool To Help The Blind “See” Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kaggle.com/2015/01/02/cifar-10-competition-winners-interviews-with-dr-ben-graham-phil-culliton-zygmunt-zajac/&#34;&gt;CIFAR-10 Competition Winners: Interviews with Dr. Ben Graham, Phil Culliton, &amp;amp; Zygmunt Zając&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;convnets-articles:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;ConvNets Articles&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.facebook.com/posts/1478523512478471/teaching-machines-to-see-and-understand-advances-in-ai-research/&#34;&gt;Teaching machines to see and understand: Advances in AI research
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;convnets:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;ConvNets&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cs.stanford.edu/people/karpathy/convnetjs/&#34;&gt;Andrej Karpathy: ConvNetJS - Deep Learning in your browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cs231n.github.io/convolutional-networks/&#34;&gt;CS231n Convolutional Neural Networks for Visual Recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cs231n.github.io/&#34;&gt;CS231n Whole Course on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Deep Learning Oxford Course, Lecture 10: Convolutional Neural Networks]&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;advanced:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Advanced&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.toronto.edu/~kriz/index.html&#34;&gt;Alex Krizhevsky NN homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.toronto.edu/~kriz/conv-cifar10-aug2010.pdf&#34;&gt;Alex Krizhevsky: Convolutional Deep Belief Networks on CIFAR-10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://machinelearning.wustl.edu/mlpapers/paper_files/NIPS2005_512.pdf&#34;&gt;2005. G. Hinton and V. Nair. Inferring Motor Programs from Images of Handwritten Digits.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;backprop:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;BackProp&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.researchgate.net/file.PostFileLoader.html?id=5617d6e2614325cd958b45f9&amp;amp;assetKey=AS%3A282660464283650%401444402914706&amp;amp;usg=AFQjCNGlW-fjs6vqQ5p-GkZWEyc1nHguNQ&amp;amp;sig2=JFoERw-KFpeS22Wv0HkDlQ&#34;&gt;1998. Y. LeCun, L. Bottou, G. Orr, K. Muller. Efficient BackProp.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;deep-learning:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Deep Learning&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://deeplearning.net/&#34;&gt;DeepLearning.Net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeplearning.net/tutorial/deeplearning.pdf&#34;&gt;Deep Learning Tutorial 0.1. LISA lab.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;books:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Books&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://research.microsoft.com/pubs/209355/DeepLearning-NowPublishing-Vol7-SIG-039.pdf&#34;&gt;L. Deng and D. Yu. Deep Learning - Methods and Applications.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;deep-belief-networks:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Deep Belief Networks&lt;/h2&gt;

&lt;h3 id=&#34;slides:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Slides&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://on-demand.gputechconf.com/gtc/2015/presentation/S5722-Umar-Arshad.pdf&#34;&gt;Deep Belief Networks by U. Arshad and Arrayfire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;deep-structured-learning:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Deep-Structured Learning&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://research.microsoft.com/pubs/155609/DENG-APSIPA.pdf&#34;&gt;2011. L. Deng. An Overview of Deep-Structured Learning for Information Processing.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;restricted-boltzmann-machines-rbms:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Restricted Boltzmann Machines (RBMs)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf&#34;&gt;April 2009. Alex Krizhevsky. Learning Multiple Layers of Features from Tiny Images.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://meseec.ce.rit.edu/756-projects/fall2014/3-2.pdf&#34;&gt;Restricted Boltzmann Machines on Multi-Core Processors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;natural-language-processing-nlp:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Natural Language Processing (NLP)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aclweb.org/anthology/S14-2033&#34;&gt;2014. D. Tang, F. Wei, B. Qi, T. Liu, M. Zhou. Coooolll: A Deep Learning System for Twitter Sentiment Classification∗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://arxiv.org/pdf/1404.2188v1&#34;&gt;2014. A Convolutional Neural Network for Modelling Sentences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jmlr.org/papers/volume12/collobert11a/collobert11a.pdf&#34;&gt;2011. R. Collobert, J. Weston, L. Bottou M. Karlen, K. Kavukcuoglu, P. Kuksa. Natural Language Processing (Almost) from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ronan.collobert.com/pub/matos/2008_nlp_icml.pdf&#34;&gt;2008. R. Collbert, J. Weston. A Unified Architecture for Natural Language Processing: Deep Neural Networks with Multitask Learning.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.toronto.edu/~fritz/absps/waibelTDNN.pdf&#34;&gt;1989! A. Waibel, T. Hanazawa, G. Hinton, K. Shikano, K. Lang. Phoneme Recognition using Time-Delay Neural Networks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;homepages:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Homepages&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://scholar.google.co.uk/citations?user=XrKLUO0AAAAJ&amp;amp;hl=en&#34;&gt;Misha Denil&amp;rsquo;s publications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mdenil.com/projects/&#34;&gt;Misha Denil&amp;rsquo;s projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;proceedings:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Proceedings&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://papers.nips.cc/book/advances-in-neural-information-processing-systems-25-2012&#34;&gt;NIPS 2012&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tools:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Tools&lt;/h2&gt;

&lt;h3 id=&#34;torch:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Torch&lt;/h3&gt;

&lt;h4 id=&#34;basics:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Basics&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://torch.ch/docs/getting-started.html#&#34;&gt;Torch Installation&lt;/a&gt;
in short&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install dependencies
curl -s https://raw.githubusercontent.com/torch/ezinstall/master/install-deps | bash

# Clone with dependencies into desired directory
git clone https://github.com/torch/distro.git /opt/torch --recursive

# cd the install directory and run installation script
cd /opt/torch &amp;amp;&amp;amp; ./install.sh

# Update current session
source ~/.bashrc

# Run Torch REPL
th
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/torch/torch7/wiki/Cheatsheet&#34;&gt;Torch Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/torch/torch7/wiki/Torch-for-Numpy-users&#34;&gt;Torch reference for numpy users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://atamahjoubfar.github.io/Torch_for_Matlab_users.pdf&#34;&gt;Torch reference for Matlab users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tylerneylon.com/a/learn-lua/&#34;&gt;Lua in 15 minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/torch/torch7/wiki/Cheatsheet#tutorials-demos-by-category&#34;&gt;Torch Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;articles:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Articles&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fastml.com/torch-vs-theano/&#34;&gt;Torch vs Theano comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stats.stackexchange.com/questions/162376/what-are-key-differences-between-theano-python-and-torch-lua-for-deep-learni&#34;&gt;Torch vs Theano in a context of deep learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fastml.com/loading-data-in-torch-is-a-mess/&#34;&gt;Loading data in Torch (is a mess)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;slides-1:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Slides&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hunch.net/~nyoml/torch7.pdf&#34;&gt;Torch7 - scientific computing for Lua(JIT)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://learning.cs.toronto.edu/wp-content/uploads/2015/02/torch_tutorial.pdf&#34;&gt;Deep learning with Torch - the good, the bad, the ugly since 2002.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;advanced-1:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Advanced&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/twitter/torch-autograd&#34;&gt;Torch Autograd by Twitter for automatically differentiating native Torch code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.twitter.com/2015/autograd-for-torch&#34;&gt;Autograd for Torch by Twitter.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;cool-projects:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Cool projects&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/deepdream/blob/master/dream.ipynb&#34;&gt;Deep Dreams (with Caffe) - neural network that produces &amp;ldquo;dream&amp;rdquo; visuals&lt;/a&gt; &lt;a href=&#34;http://googleresearch.blogspot.ch/2015/06/inceptionism-going-deeper-into-neural.html&#34;&gt;show here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;datasets:0b0498fb8c0302fbae03ec1da4dd212b&#34;&gt;Datasets&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.toronto.edu/~kriz/cifar.html&#34;&gt;CIFAR-10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hosting Hugo on GitHub Pages: Workflow</title>
      <link>http://jhirniak.github.io/post/hugo_workflow_for_github/</link>
      <pubDate>Sun, 08 Nov 2015 02:41:50 +0000</pubDate>
      
      <guid>http://jhirniak.github.io/post/hugo_workflow_for_github/</guid>
      <description>

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#hosting-personal-organizational-page-in-one-repo:55e98266337c51f1413d03075e44f733&#34;&gt;Hosting personal/organizational page in one repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hosting-personal-organizational-page-in-two-repos:55e98266337c51f1413d03075e44f733&#34;&gt;Hosting personal/organizational page in two repos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hosting-project-page:55e98266337c51f1413d03075e44f733&#34;&gt;Hosting project page&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;hosting-hugo-on-github-pages-workflow:55e98266337c51f1413d03075e44f733&#34;&gt;Hosting Hugo on GitHub pages: workflow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub&lt;/a&gt; is a great and convenient place to host your static pages - it gives you a nice website address with &lt;code&gt;github.io&lt;/code&gt; and combines repo for your website with hosting. Furthermore, it is free and ad-free. I believe if set up right then it can save you considerable time. In this post I share a great git workflow I use for this blog with a &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo static engine&lt;/a&gt;. The workflow was described by &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;Spencer Lyon in his tutorial on hosting Hugo on GitHub pages&lt;/a&gt;, here I share 2 workflows described by Spencer and one my own.&lt;/p&gt;

&lt;h2 id=&#34;hosting-personal-organizational-page-in-one-repo:55e98266337c51f1413d03075e44f733&#34;&gt;Hosting personal/organizational page in one repo&lt;/h2&gt;

&lt;p&gt;If you are creating a new repo then just do follow the instructions exactly. You can rename &lt;code&gt;code&lt;/code&gt; branch to anything you like, except &lt;code&gt;master&lt;/code&gt;, as &lt;code&gt;master&lt;/code&gt; is a branch from which GitHub Pages get static website content. Note, that the website available under &lt;code&gt;&amp;lt;your-username&amp;gt;.github.io&lt;/code&gt; must be hosted in a repo called &lt;code&gt;&amp;lt;your-username&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you have extisting repo at &lt;code&gt;&amp;lt;your-username&amp;gt;.github.io&lt;/code&gt; then you can either delete the repo and start clean following the instructions or delete the master branch with &lt;code&gt;git branch -D master&lt;/code&gt; making sure before if that branch has your website code that you checked it out to another branch with &lt;code&gt;git checkout -b &amp;lt;code-branch&amp;gt;&lt;/code&gt; and `git push origin &lt;code-branch&gt;&amp;rsquo;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;&amp;lt;your-username&amp;gt;.github.io&lt;/code&gt; repo. Alternatively, if you have got existing &lt;code&gt;&amp;lt;your-username&amp;gt;.github.io&lt;/code&gt; repo then make sure to checkout code to non-&lt;code&gt;master&lt;/code&gt; branch with steps described above.&lt;/li&gt;
&lt;li&gt;If you are starting fresh initialize the repo:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git checkout code
echo &amp;quot;# README&amp;quot; &amp;gt;&amp;gt; README.md
git add .
git commit -m &#39;Initial commit&#39;
git remote add origin git@github.com:username/username.github.io git
git push -u origin code
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Now, the steps regardless if repo existed or not are the same. Create orphan branch (a branch that has no common history with an existing branch) called &lt;code&gt;master&lt;/code&gt;. We will synchronize its code with &lt;code&gt;public&lt;/code&gt; folder of the &lt;code&gt;code&lt;/code&gt; branch.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Set up orphan branch master
git checkout --orphan master
git rm --cached $(git ls-files)
git checkout code README.md
git add .
git commit -m &amp;quot;INIT: initial commit on master branch&amp;quot;
git push origin master

git checkout code

# Create Hugo website or copy existing files for Hugo website
rm -rf public/
git subtree add --prefix=public git@github.com:username/username.github.io.git master --squash
git subtree pull --prefix=public git@github.com:username/username.github.io.git master --squash # to avoid merge conflicts
hugo # with any parameters you may need, as -b=http://www.username.github.io --theme=your_theme_name --buildDrafts -d=public/ -v
git add -A .
git commit -m &#39;Website update&#39;
git push origin code
git subtree push --prefix=public git@github.com:username/username.github.io.git master --squash
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;deploy-sh:55e98266337c51f1413d03075e44f733&#34;&gt;Deploy.sh&lt;/h3&gt;

&lt;p&gt;To automate the above process of commiting to code branch, generating Hugo static pages, and pushing them to &lt;code&gt;master&lt;/code&gt; branch we will create &lt;code&gt;deploy.sh&lt;/code&gt; script. Remember, to update &lt;code&gt;&amp;lt;your-username&amp;gt;&lt;/code&gt;, &lt;your-project&gt;, and if you used different prefix &lt;code&gt;--prefix&lt;/code&gt; in the script. Finally, make the script executable with &lt;code&gt;chmod +x deploy.sh&lt;/code&gt; and commit it to the repo. To use the script you just need to type &lt;code&gt;./deploy.sh &amp;lt;commit-message&amp;gt;&lt;/code&gt;. If you leave &lt;code&gt;&amp;lt;commit-message&amp;gt;&lt;/code&gt; empty then &lt;code&gt;rebuilding site &amp;lt;current-date&amp;gt;&lt;/code&gt; will be used instead.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project
# You may need to use some of the below options:
#   * -b=http://&amp;lt;your-username&amp;gt;.github.io/&amp;lt;your-project&amp;gt;
#   * --theme=&amp;lt;your-theme-name&amp;gt;
#   * --buildDrafts   # include drafts
#   * -d=&amp;lt;static-pages-dir&amp;gt;
#   * -v   # verbose
#
# Example: hugo -b=http://jhirniak.github.io/ --theme=hugo-steam-theme --buildDrafts -d=public/ -v
hugo 

git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin code
# Example:
# git subtree push --prefix=public git@github.com:jhirniak/jhirniak.github.io.git master
git subtree push --prefix=public git@github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-username&amp;gt;.github.io.git master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;hosting-personal-organizational-page-in-two-repos:55e98266337c51f1413d03075e44f733&#34;&gt;Hosting personal/organizational page in two repos&lt;/h2&gt;

&lt;p&gt;When you divide project into a submodule for the &lt;code&gt;username.github.io&lt;/code&gt; static pages from &lt;code&gt;public&lt;/code&gt; folder (or the one that you use) and separate repo for the website code then the procedure is quite simple.&lt;/p&gt;

&lt;p&gt;Step by step:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;code&lt;/code&gt; repository, e.g. &lt;code&gt;&amp;lt;username&amp;gt;-hugo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create static &lt;code&gt;website&lt;/code&gt; repository, i.e. &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;, for &lt;code&gt;public&lt;/code&gt; folder of you hugo website.&lt;/li&gt;
&lt;li&gt;Create website at &lt;code&gt;&amp;lt;username&amp;gt;-hugo&lt;/code&gt;, test it with &lt;code&gt;hugo server --watch -t &amp;lt;yourtheme&amp;gt;&lt;/code&gt;, and once happy remove &lt;code&gt;public&lt;/code&gt; folder with &lt;code&gt;rm -rf public&lt;/code&gt; and commit changes.&lt;/li&gt;
&lt;li&gt;Add submodule at &lt;code&gt;&amp;lt;username&amp;gt;-hugo&lt;/code&gt; repo with:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule add git@github.com:&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;deploy.sh&lt;/code&gt; script and make it executable with &lt;code&gt;chmod +x deploy.sh&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;deploy-sh-1:55e98266337c51f1413d03075e44f733&#34;&gt;Deploy.sh&lt;/h3&gt;

&lt;p&gt;Remember, to update &lt;code&gt;&amp;lt;your-username&amp;gt;&lt;/code&gt;, &lt;your-project&gt;, and if you used different prefix &lt;code&gt;--prefix&lt;/code&gt; in the script. Finally, make the script executable with &lt;code&gt;chmod +x deploy.sh&lt;/code&gt; and commit it to the repo. To use the script you just need to type &lt;code&gt;./deploy.sh &amp;lt;commit-message&amp;gt;&lt;/code&gt;. If you leave &lt;code&gt;&amp;lt;commit-message&amp;gt;&lt;/code&gt; empty then &lt;code&gt;rebuilding site &amp;lt;current-date&amp;gt;&lt;/code&gt; will be used instead.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project
# You may need to use some of the below options:
#   * -b=http://&amp;lt;your-username&amp;gt;.github.io/&amp;lt;your-project&amp;gt;
#   * --theme=&amp;lt;your-theme-name&amp;gt;
#   * --buildDrafts   # include drafts
#   * -d=&amp;lt;static-pages-dir&amp;gt;
#   * -v   # verbose
#
# Example: hugo -b=http://jhirniak.github.io/ --theme=hugo-steam-theme --buildDrafts -d=public/ -v
hugo 

cd public    # Go To Public folder
git add -A   # Add changes to git.

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

git push origin master   # Push source and build repos.

cd ..   # Come Back
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;hosting-project-page:55e98266337c51f1413d03075e44f733&#34;&gt;Hosting project page&lt;/h2&gt;

&lt;p&gt;Project page workflow is very similar to hosting personal/organizational page, except that the static pages are in &lt;code&gt;gh-pages&lt;/code&gt; branch and code in some other branch. Here, we assume that you are creating &lt;code&gt;gh-pages&lt;/code&gt; for existing project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an orphan branch (no commit history) &lt;code&gt;gh-pages&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout --orphan gh-pages

# Unstage all files
git rm --cached $(git ls-files)

# Grab one file from the master branch to make a commit
git checkout master README.md

# Add and commit that file
git add .
git commit -m &amp;quot;INIT: initial commit on gh-pages branch&amp;quot;

# Push to remote gh-pages branch
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Now, we will configure workflow on the branch that has Hugo files, here we assume it is on &lt;code&gt;master&lt;/code&gt; branch, but it could be any.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout master # Return to master branch

git checkout -b website # Or create new branch for the website

3. Create or copy your Hugo project if you have not got it ready, yet.

4. Set up workflow:
```bash 
# Remove the public folder to make room for the gh-pages subtree
rm -rf public

# Add the gh-pages branch of the repository.
git subtree add --prefix=public git@github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-project&amp;gt;.git gh-pages --squash

# Pull down the file we just committed to avoid merge conflicts.
# It is the same as above, except for the word `add` that is replaced with word `pull`.
git subtree pull --prefix=public git@github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-project&amp;gt;.git gh-pages

# Generate static pages with Hugo.
# You may need to use some of the below options:
#   * -b=http://&amp;lt;your-username&amp;gt;.github.io/&amp;lt;your-project&amp;gt;
#   * --theme=&amp;lt;your-theme-name&amp;gt;
#   * --buildDrafts   # include drafts
#   * -d=&amp;lt;static-pages-dir&amp;gt;
#   * -v   # verbose
hugo 


# Commit changes
git add -A
git commit -m &amp;quot;Updating site&amp;quot;
git push origin master

# Push the `public` subtree to the `gh-pages`
git subtree push --prefix=public git@github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-project&amp;gt;.git gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;deploy-sh-2:55e98266337c51f1413d03075e44f733&#34;&gt;Deploy.sh&lt;/h3&gt;

&lt;p&gt;To automate the whole process add the below &lt;code&gt;deploy.sh&lt;/code&gt; script. Remember, to update &lt;code&gt;&amp;lt;your-username&amp;gt;&lt;/code&gt;, &lt;your-project&gt;, and if you used different prefix &lt;code&gt;--prefix&lt;/code&gt; in the script. Finally, make the script executable with &lt;code&gt;chmod +x deploy.sh&lt;/code&gt; and commit it to the repo. To use the script you just need to type &lt;code&gt;./deploy.sh &amp;lt;commit-message&amp;gt;&lt;/code&gt;. If you leave &lt;code&gt;&amp;lt;commit-message&amp;gt;&lt;/code&gt; empty then &lt;code&gt;rebuilding site &amp;lt;current-date&amp;gt;&lt;/code&gt; will be used instead.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project
# You may need to use some of the below options:
#   * -b=http://&amp;lt;your-username&amp;gt;.github.io/&amp;lt;your-project&amp;gt;
#   * --theme=&amp;lt;your-theme-name&amp;gt;
#   * --buildDrafts   # include drafts
#   * -d=&amp;lt;static-pages-dir&amp;gt;
#   * -v   # verbose
hugo 

git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master
git subtree push --prefix=public git@github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-project&amp;gt;.git gh-pages
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>